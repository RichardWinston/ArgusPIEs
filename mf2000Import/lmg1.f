C     Last change:  SWM  01 OCT 2002     4:28 pm
c rbw begin change
c rbw STOR1, STOR2, and STOR3 added to list of parameters
c      SUBROUTINE LMG1ALG(ISUM,ISUMI,LCA,LCIA,LCJA,LCU1,LCFRHS,LCIG,
c     1                   ISIZ1,ISIZ2,ISIZ3,ISIZ4,ICG,NCOL,NROW,NLAY,
c     2                   IN,IOUT,IFREFM)
      SUBROUTINE LMG1ALG(ISUM,ISUMI,LCA,LCIA,LCJA,LCU1,LCFRHS,LCIG,
     1                   ISIZ1,ISIZ2,ISIZ3,ISIZ4,ICG,NCOL,NROW,NLAY,
     2                   IN,IOUT,IFREFM, STOR1, STOR2, STOR3)
c rbw end change
C
C-----VERSION 1.0 25JUL2001 LMG1ALG
C
C     ******************************************************************
C     ALLOCATE STORAGE IN THE IX AND Z ARRAYS FOR LMG ARRAYS
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      CHARACTER*200 LINE
C     ------------------------------------------------------------------
C
C1------PRINT A MESSAGE IDENTIFYING AMG PACKAGE
      WRITE(IOUT,500)
  500 FORMAT(1X,/1X,'LMG -- ALGEBRAIC MULTI-GRID SOLUTION PACKAGE',
     &     ', VERSION 1.2, 09/19/2002')
      
C
C2-------READ AND PRINT COMMENTS, STOR1, STOR2, STOR3, ICG
      CALL URDCOM(IN,IOUT,LINE)
      IF(IFREFM.EQ.0) THEN
        READ (LINE,505) STOR1, STOR2, STOR3, ICG
  505   FORMAT (3F10.0,I10)
      ELSE
        READ (LINE,*)  STOR1, STOR2, STOR3, ICG
      END IF
      WRITE(IOUT,510) STOR1, STOR2, STOR3
  510 FORMAT (1X,'STORAGE FACTOR FOR (A) AND (JA)= ',F6.3,/,
     &        1X,'STORAGE FACTOR FOR (IA), (U), AND (F)= ',F6.3,/,
     &        1X,'STORAGE FACTOR FOR (IG)= ',F6.3)
C
C2A-----IF CG CORRECTION NOT SET TO 0 OR 1, SET TO ZERO (NO CG)
      IF(ICG .NE. 0 .AND. ICG .NE. 1) ICG = 0
C
C3------ALLOCATE SPACE FOR THE AMG ARRAYS
C3------DOBULE PRECISION VARIABLES ARE: A, U, FRHS (LCA, LCU1, LCFRHS)
C3------INTEGER VARIABLES ARE: IA, JA, IG
      ISOLD=ISUM
      ISOLDI=ISUMI
      NRC=NROW*NCOL
      NRL=NROW*NLAY
      NCL=NCOL*NLAY
      NODES=NRC*NLAY
      NNA=NODES+2*(NCOL-1)*NRL+2*(NROW-1)*NCL+2*(NLAY-1)*NRC
      ISIZ1=STOR1*NNA+5*NODES
      ISIZ2=STOR2*NODES
      ISIZ3=STOR3*NODES
      ISIZ4=ISIZ2
      IF(ICG .EQ. 1)ISIZ4=ISIZ4+NODES
      LCA=ISUM                  
      ISUM=ISUM+ISIZ1  
      LCU1=ISUM                 
      ISUM=ISUM+ISIZ4  
      LCFRHS=ISUM               
      ISUM=ISUM+ISIZ4  
C3A-----INTERGERS
      LCIA=ISUMI
      ISUMI=ISUMI+ISIZ2
      LCJA=ISUMI
      ISUMI=ISUMI+ISIZ1
      LCIG=ISUMI
      ISUMI=ISUMI+ISIZ3
C
C4------CALCULATE AND PRINT THE SPACE USED IN THE Z AND IX ARRAYS
      IAMG=ISUM-ISOLD
      WRITE(IOUT,515) IAMG
  515 FORMAT(1X,I9,' ELEMENTS IN Z ARRAY ARE USED BY LMG')
      IAMG=ISUMI-ISOLDI
      WRITE(IOUT,520) IAMG
  520 FORMAT(1X,I9,' ELEMENTS IN IX ARRAY ARE USED BY LMG')
      WRITE(IOUT,525) ISIZ1, ISIZ4, ISIZ2, ISIZ3
  525 FORMAT(' SPACE ALLOCATED FOR [A] AND [JA]=',I9,/,
     &       ' SPACE ALLOCATED FOR [U] AND [FRHS]=',I9,/,
     &       ' SPACE ALLOCATED FOR [IA]=',I9,/,
     &       ' SPACE ALLOCATED FOR [IG]=',I9)
      RETURN
      END
C
C***********************************************************************
      SUBROUTINE LMG1RPG(IN,MXITER,MXCYC,BCLOSE,DAMP,IOUTAMG,IOUT,
     &                  IFREFM,ICG,IADAMP,DUP,DLOW,HCLOSE) 
C
C-----VERSION 19SEP2002 LMG1RPG
C     ******************************************************************
C     READ DATA FOR AMG
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
C     ------------------------------------------------------------------
C1-------INITIALIZE HCLOSE SO IT ISN'T UNDEFINED---erb 8/18/00
      HCLOSE = 0.0
      IADAMP = 0
      DUP=0.
      DLOW=0.
C
C2------READ MXITER,MXCYC,BCLOSE, DAMP, AND IOUTAMG
      IF(IFREFM.EQ.0) THEN
         READ (IN,500) MXITER,MXCYC,BCLOSE,DAMP,IOUTAMG
  500    FORMAT (2I10,2F10.0,I10)
      ELSE
         READ (IN,*)  MXITER,MXCYC,BCLOSE,DAMP,IOUTAMG
      END IF
C2------CHECK VALUE OF DAMP AND SEE IF ADAPTIVE DAMPING IS SELECTED.
C2------USE 1.E-6 AS A TOLERANCE WHEN CHECKING IF DAMP = -1 OR -2
C2------SET DAMP TO 1.0 FOR ALL OTHER VALUES, UNLESS THIS IS GREATER 
C2------THAN DUP, IN WHICH CASE SET DAMP TO DUP.
      IF(DAMP .LE. 0.)THEN
        IF(ABS(DAMP + 1.0) .LT. 1.E-6)THEN
          IADAMP = -1
        ELSEIF(ABS(DAMP + 2.0) .LT. 1.E-6)THEN
          DAMP=1.0
          IADAMP = -2
          READ(IN,*) DUP,DLOW
           IF(DUP .LT. 1.0)DAMP=DUP
        ELSE
          DAMP=1.0
        ENDIF
      ENDIF
C
C3------PRINT COMMENTS REGARDING SOLVER OPTIONS
      WRITE (IOUT,505)
  505   FORMAT (1X,///,36X,'SOLUTION BY THE ALGEBRAIC MULTIGRID METHOD',
     &        /,36X,42('-'))
      WRITE (IOUT,510) MXITER
  510 FORMAT (1X,20X,'MAXIMUM NUMBER OF CALLS TO AMG ROUTINE =',I9)
      WRITE (IOUT,515) MXCYC
  515 FORMAT (1X,25X,'MAXIMUM NUMBER OF CYCLES PER CALL =',I9)
      WRITE (IOUT,520) BCLOSE
  520 FORMAT (1X,10X,'SCALED L2 NORM OF RESIDUAL CRITERION FOR',
     &               ' CLOSURE =',E15.5)
      IF(ICG .EQ. 1)THEN
        WRITE(IOUT,521) ICG
      ELSE
        WRITE(IOUT,522) ICG
      ENDIF
  521 FORMAT (1X,30X,'CG-CORRECTION IS ACTIVE: ICG =',I9)        
  522 FORMAT (1X,26X,'CG-CORRECTION IS NOT ACTIVE: ICG =',I9)        
C3
      IF(IADAMP .EQ. -1)THEN
        WRITE(IOUT,525) IADAMP
      ELSEIF(IADAMP .EQ. -2)THEN
        WRITE(IOUT, 526) IADAMP
        WRITE(IOUT, 527) DUP
        WRITE(IOUT, 528) DLOW
      ELSE
        WRITE(IOUT,529) DAMP
      ENDIF
  525 FORMAT (1X,20X,'ADAPTIVE DAMPING USING COOLEY''S METHOD =', I9)
  526 FORMAT (1X,10X,'ADAPTIVE DAMPING USING RESIDUAL REDUCTION', 
     &               ' METHOD =',I9)
  527 FORMAT (1X,37X,'MAXIMUM VALUE OF DAMP =',E15.5)
  528 FORMAT (1X,37X,'MINIMUM VALUE OF DAMP =',E15.5)
  529 FORMAT (1X,41X,'DAMPING PARAMETER =',E15.5)
      IF(IOUTAMG .EQ. 0) WRITE(IOUT,530) IOUTAMG     
  530 FORMAT (1X,24X,'PRINTING FROM SOLVER IS SUPPRESSED =', I9)
      IF(IOUTAMG .EQ. 1) WRITE(IOUT,531) IOUTAMG     
  531 FORMAT (1X,28X,'PRINTING FROM SOLVER INCLUDES:',/,
     &          25X,'RESIDUALS BEFORE AND AFTER CYCLING =', I9)
      IF(IOUTAMG .EQ. 2) WRITE(IOUT,532) IOUTAMG     
  532 FORMAT (1X,28X,'PRINTING FROM SOLVER INCLUDES:',/,
     &           2X,'RESIDUALS BEFORE AND AFTER CYCLING, CP-TIMES,',
     &              ' AND STORAGE =',I9)
      IF(IOUTAMG .EQ. 3) WRITE(IOUT,533) IOUTAMG     
  533 FORMAT (1X,28X,'PRINTING FROM SOLVER INCLUDES:',/,
     &              'MESSAGES, RESIDUALS AFTER EACH CYCLE, CP-TIMES,',
     &              ' AND STORAGE =',I9)
C
C4------SET IOUTAMG TO A VALUE THAT AMG WANTS BY ADDING 10 TO THE VALUE.
c rbw begin change
c      IOUTAMG = 10+IOUTAMG
c rbw end change
      RETURN
      END
C
C***********************************************************************
      SUBROUTINE ADAMP1(WK,DHMAX,KITER)
C
C-----VERSION 1.0  31JAN2001 ADAMP1
C     ******************************************************************
C     THIS SUBROUTINE CALCULATES THE DAMPING PARAMETER USING DICK 
C     COOLEY'S SCHEME W/ HUYAKORN'S MODIFICATION
C     ******************************************************************
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      DOUBLEPRECISION WK
      SAVE DHOLD

C1------INITIALIZE VARIABLES.  CALCULATE "S" IF NOT ON FIRST ITERATION
      S=1
      IF(KITER .GT. 1)S=DHMAX/WK/DHOLD
C2
C2------SET APPROPIATE DAMPING BASED ON "S".  "S" REPRESENTS THE CHANGE
C2------IN HEAD SCALED BY THE DAMPING.  NOTE THAT NEGATIVE VALUES 
C2------INDICATE THAT THE SIGN CHANGED FOR THE MAXIMUM HEAD CHANGE.
C2------FOR -1 < S < 0, THE MAX HEAD CHANGE CHANGED SIGN, BUT WAS 
C2------SMALLER IN MAGNITUDE FOR THE CURRENT ITERATION, SO DAMPING IS
C2------NOT THAT AGGRESSIVE (MINIMUM POSSIBLE IS 1/2).  
C2------FOR 0 < S < 1, THERE IS NO SIGN CHANGE AND THE MAXIMUM CHANGE  
C2------IS LESS FOR THIS ITERATION, WHICH IS AN INDICATOR OF GOOD 
C2------CONVERGENCE, SO NO DAMPING IS APPLIED (WK=1).  FOR S > 1, SAME
C2------IDEA, BUT THE MAX HEAD CHANGE WAS GREATER THIS ITERATION.
C2------FOR S < -1, MAX HEAD CHANGED SIGN, AND WAS GREATER IN MAGNITUDE
C2------WHICH INDICATES THE SOLUTION IS OSCILLATING AND DIVERGING, SO
C2------DAMPING IS AGGRESSIVE (MAXIMUM POSSIBLE IS 1/2).
      IF(S .GE. -1.)THEN
        WK=(3.+S)/(3.+ABS(S))
      ELSE
        WK=1./2./ABS(S)
      ENDIF
C3
C3-----STORE MAXIMUM HEAD CHANGE FOR NEXT ITERATION
      DHOLD=DHMAX
C     
      RETURN
      END
C
C***********************************************************************
      SUBROUTINE ADAMP2(RSQ1,DDAMP,DAMP,DUP,DLOW,KITER)
C
C-----VERSION 1.1  22JUL2002 ADAMP2
C     ******************************************************************
C     THIS SUBROUTINE CALCULATES THE DAMPING PARAMETER USING THE 
C     RESIDUAL REDUCTION METHOD
C     ******************************************************************
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      LOGICAL OSCIL
      DOUBLEPRECISION RSQ1,RSQ2,RSQ3,DDAMP
      DATA ICONST, IMULT, IPER /1283,106,6075/
      SAVE RSQ2,RSQ3,NRAN,DAMP3

C1
C1------CALCULATE RESIDUAL AND INITIALIZE VARIABLES FOR FIRST ITERATION
      RSQ1=DSQRT(RSQ1)
      OSCIL = .FALSE.
      IF(KITER .EQ. 1)THEN
        RSQ3=2.*RSQ1+1.
        DAMP3=DAMP
        NRAN=1
C2
C2------CALCULATE THE RELATIVE REDUCTION IN THE RESIDUAL FOR THIS
C2------ITERATION ("RRED") SCALED BY THE DAMPING.  
C2A-----IF THE REDUCTION IS GREATER THAN 50%, THEN USE THAT RELATIVE 
C2A-----REDUCTION AS THE DAMPING VALUE FOR THE NEXT ITERATION.  THE IDEA 
C2A-----HERE IS WHEN WE ARE IN A LINEAR PART OF THE SOLUTION, THE "RRED" 
C2A-----WILL MOVE TOWARDS VALUES NEAR OR > 1, AND LITTLE OR NO DAMPING 
C2A-----WILL BE APPLIED, WHICH IS APPROPRIATE.
      ELSE
        RRED=(RSQ2-RSQ1)/RSQ2/DDAMP
        IF(RRED .GT. 0.5)THEN
          DDAMP=RRED 
          IF(DDAMP .LT. DLOW) DDAMP=DLOW
C2
C2B-----THE RELATIVE REDUCTION IS LESS THAN 50%, INDICATING THE 
C2B-----SOLUTION IS NOT PROGRESSING ADEQUATELY.  BASED ON HOW FAR FROM
C2B-----"RRED" IS FROM 50%, THE DAMPING IS MORE OR LESS AGGRESSIVE.  
C2B-----NOTE: FOR THIS CASE, THE MAXIMUM VALUE OF DAMP WILL BE 0.3 + DLOW
C2B-----SO SETTING DLOW=0.2 IS APPROPIATE SO DAMP WON'T EXCEED 0.5
        ELSE
          DDAMP=0.075/(0.75-RRED) + DLOW 
        ENDIF
C3
C3-----CHECK TO SEE IF SOLUTION IS OSCILLATING BY CHECKING THE 
C3-----RELATIVE DIFFERENCE BETWEEN THE CURRENT RESIDUAL AND THE 
C3-----RESIDUAL FROM TWO ITERATIONS AGO.  IF THEY ARE W/ IN 10%, THEN
C3-----THE SOLUTION IS OSCILLATING.  
C3-----MAKE SURE DDAMP DOESN'T EXCEED DUP
C3-----IF THE SOLUTION IS OSCILLATING, AND WE ARE APPLYING A SIMILAR
C3-----VALUE OF DAMP (W/ IN 1%) THAT WE APPLIED PREVIOUSLY, THEN WE ARE 
C3-----CAUGHT IN SOME TYPE OF ATTRACTOR. SO GENERATE A RANDOM VALUE OF 
C3-----DDAMP AND HOPE TO GET OUT OF THE BASIN OF THIS ATTRACTOR.  
C3-----NOTE THAT THIS IS VERY MUCH A DESPARATION EFFORT!
C
        OSTERM=(RSQ3-RSQ1)/RSQ3
        IF(ABS(OSTERM) .LT. 0.10) OSCIL =.TRUE.
        IF(DDAMP .GT. DUP)DDAMP=DUP
        IF(OSCIL .AND. ABS(DDAMP-DAMP3)/DAMP3 .LT. 0.01)THEN
          NRAN=MOD(NRAN*IMULT+ICONST,IPER)
          QRAND=FLOAT(NRAN)/FLOAT(IPER)
          DDAMP=0.0001D0+QRAND*(1.5D0-0.D0)
        ENDIF
C4
C4-----STORE VALUES OF DAMP AND RESIDUALS FOR NEXT ITERATION
        RSQ3=RSQ2
        DAMP3=DAMP
      ENDIF
      RSQ2=RSQ1
      DAMP=DDAMP
C5
      RETURN
      END
