# 
# MF_WEL.met
# ----------------------------------------------------
# Well Package
# ----------------------------------------------------
If: ContinueSimulation&(WellChoice!=0&ExportWEL!=0)
	Set Variable: ContinueSimulation:= MODFLOW_ProgressBarSetMessage("Well Package")
	Redirect output to: @adeFileName@.wel
	End file
	Set Variable: MaxWells:= 0
	Set Variable: CurrentWellCount:= 0
	Loop for: Variable LayIndex from: 1 to: MODFLOW_NLAY() step: 1
		Set Variable: PointLayerIsEmpty:= IsLayerEmpty(Wells Unit[LayIndex].Top Elevation)
		Set Variable: LineLayerIsEmpty:= IsLayerEmpty(Line Wells Unit[LayIndex].Top Elevation)
		If: @cbUseAreaWells@
			Set Variable: AreaLayerIsEmpty:= IsLayerEmpty(Area Wells Unit[LayIndex].Top Elevation)
		End if
		Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAdvance()
		If: ContinueSimulation
			If: LayIndex=1
				Set Variable: M:= 0
			Else
				Set Variable: M:= M+MODFLOW_SIMUL(LayIndex-1)*MODFLOW_NDIV(LayIndex-1)
			End if
			# 
			If: MODFLOW_SIMUL(LayIndex)
				# 
				Loop for: Blocks
					# 
					If: ContinueSimulation
						Set Variable: DumRow:= Row()
						Set Variable: DumCol:= Column()
						Set Variable: AreaBoundaryInBlock:= 0
						If: !PointLayerIsEmpty
							Loop for: Objects in layer: WELLS UNIT[LayIndex]
								Set Variable: WT:= Wells Unit[LayIndex].Top Elevation
								Set Variable: WB:= Wells Unit[LayIndex].Bottom Elevation
								# YBI: Pre calculate elevation top and thickness
								Set Variable: TempValue2:= Elevation Top Unit[LayIndex]
								Set Variable: TempValue4:= Elevation Bottom Unit[LayIndex]
								If: (WT>TempValue2)|(WT<=TempValue4)
									If: ShowWarnings
										Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Top Elevation in a well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is outside the limits of the unit, it will be treated as if the top of the well screen were at the top of the unit.")
									End if
									Set Variable: WT:= TempValue2
								End if
								If: (WB>TempValue2)|(WB<TempValue4)
									If: ShowWarnings
										Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Bottom Elevation in a well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is outside the limits of the unit, it will be treated as if the bottom of the well screen were at the bottom of the unit.")
									End if
									Set Variable: WB:= TempValue4
								End if
								If: ShowWarnings & !((WT-WB) > 0)
									Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Vertical extent of Line Well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is ,= 0, it will be skipped.")
								End if
								If: ((WT-WB) > 0)
									Loop for: Variable DivIndex from: 1 to: MODFLOW_NDIV(LayIndex) step: 1
										Set Variable: DumLay:= M+DivIndex
										Set Variable: TempValue3:= (TempValue2-TempValue4)/MODFLOW_NDIV(LayIndex)
										Set Variable: TML:= TempValue2-(DivIndex-1)*TempValue3
										Set Variable: BML:= TempValue2-DivIndex*TempValue3
										If: ((WT>TML)&(WB>=TML))|WT<=BML
										Else
											Set Variable: ocflag:= 0
											If: (WT<=TML&WT>BML)&(WB<TML&WB>=BML)
												Set Variable: ocflag:= 1
												Set Variable: TempValue1:= WT-WB
											End if
											If: ocflag=0
												If: (WT<=TML&WT>BML)&(WB<=BML)
													Set Variable: ocflag:= 1
													Set Variable: TempValue1:= WT-BML
												End if
											End if
											If: ocflag=0
												If: (WT>=TML)&(WB<TML&WB>=BML)
													Set Variable: ocflag:= 1
													Set Variable: TempValue1:= TML-WB
												End if
											End if
											If: ocflag=0
												If: (WT>TML)&(WB<BML)
													Set Variable: ocflag:= 1
													Set Variable: TempValue1:= TML-BML
												End if
											End if
											Set Variable: CurrentWellCount:= CurrentWellCount + 1
											Loop for: Variable PeriodIndex from: 1 to: MODFLOW_NPER() step: 1
												If: !(PeriodIndex>1&SteadyWell=0)
													Redirect output to: TempWellPer
														Set Variable: TempValue5:= TempValue1*Wells Unit[LayIndex].Stress[PeriodIndex]/(WT-WB)
														Start a new line
															Export expression: DumLay [I10]
															Export expression: DumRow [I10]
															Export expression: DumCol [I10]
															Export expression: TempValue5; [E13.5]
															# MODPATH
															If: MODPATHChoice
																Export expression: Wells Unit[LayIndex].IFACE[PeriodIndex] [G0]
															End if
															# MOC3D Data
															If: TransportFlag=1 & Transport>0
																Export expression: Wells Unit[LayIndex].Concentration[PeriodIndex] [E13.5]
															End if
														End line
													End file
													Evaluate expression: MODFLOW_Join_Files("TempWellPer" + PeriodIndex, "TempWellPer", "TempWellPer" + PeriodIndex)
												End if
											End loop
										End if
									End loop
								End if
							End loop
						End if
						If: @cbAltWel@
							If: !LineLayerIsEmpty
								Set Variable: WT:= Line Wells Unit[LayIndex].Top Elevation
								Set Variable: WB:= Line Wells Unit[LayIndex].Bottom Elevation
								# YBI: Pre calculate elevation top and thickness
								Set Variable: LayerTop:= MODFLOW_L_GetFromOneBased3DList(TopElevationList, DumCol, DumRow, LayIndex)
								Set Variable: LayerBottom:= MODFLOW_L_GetFromOneBased3DList(BottomElevationList, DumCol, DumRow, LayIndex)
								If: (WT>LayerTop)|(WT<=LayerBottom)
									If: ShowWarnings
										Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Top Elevation in a Line well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is outside the limits of the unit, it will be treated as if the top of the well screen were at the top of the unit.")
									End if
									Set Variable: WT:= LayerTop
								End if
								If: (WB>LayerTop)|(WB<LayerBottom)
									If: ShowWarnings
										Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Bottom Elevation in a Line well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is outside the limits of the unit, it will be treated as if the bottom of the well screen were at the bottom of the unit.")
									End if
									Set Variable: WB:= LayerBottom
								End if
								If: ShowWarnings & !((WT-WB) > 0)
									Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Vertical extent of Line Well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is ,= 0, it will be skipped.")
								End if
								If: ((WT-WB) > 0)
									Loop for: Variable DivIndex from: 1 to: MODFLOW_NDIV(LayIndex) step: 1
										Set Variable: DumLay:= M+DivIndex
										Set Variable: TempValue3:= (LayerTop-LayerBottom)/MODFLOW_NDIV(LayIndex)
										Set Variable: TML:= LayerTop-(DivIndex-1)*TempValue3
										Set Variable: BML:= LayerTop-DivIndex*TempValue3
										If: ((WT>TML)&(WB>=TML))|WT<=BML
										Else
											Set Variable: ocflag:= 0
											If: (WT<=TML&WT>BML)&(WB<TML&WB>=BML)
												Set Variable: ocflag:= 1
												Set Variable: TempValue1:= WT-WB
											End if
											If: ocflag=0
												If: (WT<=TML&WT>BML)&(WB<=BML)
													Set Variable: ocflag:= 1
													Set Variable: TempValue1:= WT-BML
												End if
											End if
											If: ocflag=0
												If: (WT>=TML)&(WB<TML&WB>=BML)
													Set Variable: ocflag:= 1
													Set Variable: TempValue1:= TML-WB
												End if
											End if
											If: ocflag=0
												If: (WT>TML)&(WB<BML)
													Set Variable: ocflag:= 1
													Set Variable: TempValue1:= TML-BML
												End if
											End if
											If: ShowWarnings & !((WT-WB) > 0)
												Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Vertical extent of Line Well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is ,= 0, it will be skipped.")
											End if
											If: ((WT-WB) > 0)
												Set Variable: CurrentWellCount:= CurrentWellCount + 1
												Loop for: Variable PeriodIndex from: 1 to: MODFLOW_NPER() step: 1
													If: !(PeriodIndex>1&SteadyWell=0)
														Redirect output to: TempWellPer
															If: Line Wells Unit[LayIndex].Stress Indicator[PeriodIndex] = 1
																Set Variable: TempValue5:= TempValue1*WSumObjectsInBlock(Line Wells Unit[LayIndex].Stress[PeriodIndex])/(WT-WB)
															Else
																If: Line Wells Unit[LayIndex].Stress Indicator[PeriodIndex] = 2
																	Set Variable: SegmentLength:= 0
																	Loop for: Objects in layer: LINE Wells UNIT[LayIndex]
																		If: Line Wells Unit[LayIndex].Stress Indicator[PeriodIndex] = 2
																			Set Variable: SegmentLength:= SegmentLength + ContourIntersectLength()/ContourLength()
																		End if
																	End loop
																	Set Variable: TempValue5:= TempValue1*SegmentLength*Line Wells Unit[LayIndex].Total Stress[PeriodIndex]/(WT-WB)
																Else
																	Set Variable: TempValue5:= 0
																End if
															End if
															Start a new line
																Export expression: DumLay [I10]
																Export expression: DumRow [I10]
																Export expression: DumCol [I10]
																Export expression: TempValue5; [E13.5]
																# MODPATH
																If: MODPATHChoice
																	Export expression: Line Wells Unit[LayIndex].IFACE[PeriodIndex] [G0]
																End if
																# MOC3D Data
																If: TransportFlag=1 & Transport>0
																	Export expression: Line Wells Unit[LayIndex].Concentration[PeriodIndex] [E13.5]
																End if
															End line
														End file
														Evaluate expression: MODFLOW_Join_Files("TempWellPer" + PeriodIndex, "TempWellPer", "TempWellPer" + PeriodIndex)
													End if
												End loop
											End if
										End if
									End loop
								End if
							End if
						Else
							If: !LineLayerIsEmpty
								Loop for: Objects in layer: LINE Wells UNIT[LayIndex]
									Set Variable: WT:= Line Wells Unit[LayIndex].Top Elevation
									Set Variable: WB:= Line Wells Unit[LayIndex].Bottom Elevation
									# YBI: Pre calculate elevation top and thickness
									Set Variable: LayerTop:= MODFLOW_L_GetFromOneBased3DList(TopElevationList, DumCol, DumRow, LayIndex)
									Set Variable: LayerBottom:= MODFLOW_L_GetFromOneBased3DList(BottomElevationList, DumCol, DumRow, LayIndex)
									If: (WT>LayerTop)|(WT<=LayerBottom)
										If: ShowWarnings
											Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Top Elevation in a Line well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is outside the limits of the unit, it will be treated as if the top of the well screen were at the top of the unit.")
										End if
										Set Variable: WT:= LayerTop
									End if
									If: (WB>LayerTop)|(WB<LayerBottom)
										If: ShowWarnings
											Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Bottom Elevation in a Line well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is outside the limits of the unit, it will be treated as if the bottom of the well screen were at the bottom of the unit.")
										End if
										Set Variable: WB:= LayerBottom
									End if
									If: ShowWarnings & !((WT-WB) > 0)
										Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Vertical extent of Line Well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is ,= 0, it will be skipped.")
									End if
									If: ((WT-WB) > 0)
										Loop for: Variable DivIndex from: 1 to: MODFLOW_NDIV(LayIndex) step: 1
											Set Variable: DumLay:= M+DivIndex
											Set Variable: TempValue3:= (LayerTop-LayerBottom)/MODFLOW_NDIV(LayIndex)
											Set Variable: TML:= LayerTop-(DivIndex-1)*TempValue3
											Set Variable: BML:= LayerTop-DivIndex*TempValue3
											If: ((WT>TML)&(WB>=TML))|WT<=BML
											Else
												Set Variable: ocflag:= 0
												If: (WT<=TML&WT>BML)&(WB<TML&WB>=BML)
													Set Variable: ocflag:= 1
													Set Variable: TempValue1:= WT-WB
												End if
												If: ocflag=0
													If: (WT<=TML&WT>BML)&(WB<=BML)
														Set Variable: ocflag:= 1
														Set Variable: TempValue1:= WT-BML
													End if
												End if
												If: ocflag=0
													If: (WT>=TML)&(WB<TML&WB>=BML)
														Set Variable: ocflag:= 1
														Set Variable: TempValue1:= TML-WB
													End if
												End if
												If: ocflag=0
													If: (WT>TML)&(WB<BML)
														Set Variable: ocflag:= 1
														Set Variable: TempValue1:= TML-BML
													End if
												End if
												Set Variable: CurrentWellCount:= CurrentWellCount + 1
												Loop for: Variable PeriodIndex from: 1 to: MODFLOW_NPER() step: 1
													If: !(PeriodIndex>1&SteadyWell=0)
														Redirect output to: TempWellPer
															If: Line Wells Unit[LayIndex].Stress Indicator[PeriodIndex] = 1
																Set Variable: TempValue5:= TempValue1*ContourIntersectLength() * Line Wells Unit[LayIndex].Stress[PeriodIndex]/(WT-WB)
															Else
																If: Line Wells Unit[LayIndex].Stress Indicator[PeriodIndex] = 2
																	Set Variable: SegmentLength:= ContourIntersectLength()/ContourLength()
																	Set Variable: TempValue5:= TempValue1*SegmentLength*Line Wells Unit[LayIndex].Total Stress[PeriodIndex]/(WT-WB)
																Else
																	Set Variable: TempValue5:= 0
																End if
															End if
															Start a new line
																Export expression: DumLay [I10]
																Export expression: DumRow [I10]
																Export expression: DumCol [I10]
																Export expression: TempValue5; [E13.5]
																# MODPATH
																If: MODPATHChoice
																	Export expression: Line Wells Unit[LayIndex].IFACE[PeriodIndex] [G0]
																End if
																# MOC3D Data
																If: TransportFlag=1 & Transport>0
																	Export expression: Line Wells Unit[LayIndex].Concentration[PeriodIndex] [E13.5]
																End if
															End line
														End file
														Evaluate expression: MODFLOW_Join_Files("TempWellPer" + PeriodIndex, "TempWellPer", "TempWellPer" + PeriodIndex)
													End if
												End loop
											End if
										End loop
									End if
								End loop
							End if
							If: @cbUseAreaWells@
							If: !AreaLayerIsEmpty
								Loop for: Objects in layer: AREA Wells UNIT[LayIndex]
									Set Variable: WT:= AREA Wells Unit[LayIndex].Top Elevation
									Set Variable: WB:= AREA Wells Unit[LayIndex].Bottom Elevation
									# YBI: Pre calculate elevation top and thickness
									Set Variable: LayerTop:= MODFLOW_L_GetFromOneBased3DList(TopElevationList, DumCol, DumRow, LayIndex)
									Set Variable: LayerBottom:= MODFLOW_L_GetFromOneBased3DList(BottomElevationList, DumCol, DumRow, LayIndex)
									If: (WT>LayerTop)|(WT<=LayerBottom)
										If: ShowWarnings
											Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Top Elevation in an Area well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is outside the limits of the unit, it will be treated as if the top of the well screen were at the top of the unit.")
										End if
										Set Variable: WT:= LayerTop
									End if
									If: (WB>LayerTop)|(WB<LayerBottom)
										If: ShowWarnings
											Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Bottom Elevation in an Area well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is outside the limits of the unit, it will be treated as if the bottom of the well screen were at the bottom of the unit.")
										End if
										Set Variable: WB:= LayerBottom
									End if
									If: ShowWarnings & !((WT-WB) > 0)
										Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Vertical extent of Area Well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is ,= 0, it will be skipped.")
									End if
									Set Variable: ContourIntArea:= ContourIntersectArea()
									If: (ContourIntArea > 0) & ((WT-WB) > 0)
										Loop for: Variable DivIndex from: 1 to: MODFLOW_NDIV(LayIndex) step: 1
											Set Variable: DumLay:= M+DivIndex
											Set Variable: TempValue3:= (LayerTop-LayerBottom)/MODFLOW_NDIV(LayIndex)
											Set Variable: TML:= LayerTop-(DivIndex-1)*TempValue3
											Set Variable: BML:= LayerTop-DivIndex*TempValue3
											If: ((WT>TML)&(WB>=TML))|WT<=BML
											Else
												Set Variable: AreaBoundaryInBlock:= 1
												Set Variable: ocflag:= 0
												If: (WT<=TML&WT>BML)&(WB<TML&WB>=BML)
													Set Variable: ocflag:= 1
													Set Variable: TempValue1:= WT-WB
												End if
												If: ocflag=0
													If: (WT<=TML&WT>BML)&(WB<=BML)
														Set Variable: ocflag:= 1
														Set Variable: TempValue1:= WT-BML
													End if
												End if
												If: ocflag=0
													If: (WT>=TML)&(WB<TML&WB>=BML)
														Set Variable: ocflag:= 1
														Set Variable: TempValue1:= TML-WB
													End if
												End if
												If: ocflag=0
													If: (WT>TML)&(WB<BML)
														Set Variable: ocflag:= 1
														Set Variable: TempValue1:= TML-BML
													End if
												End if
												Set Variable: ContourArea:= ContourArea()
												Set Variable: CurrentWellCount:= CurrentWellCount + 1
												Loop for: Variable PeriodIndex from: 1 to: MODFLOW_NPER() step: 1
													If: !(PeriodIndex>1&SteadyWell=0)
														Redirect output to: TempWellPer
															If: AREA Wells Unit[LayIndex].Stress Indicator[PeriodIndex] = 1
																Set Variable: TempValue5:= TempValue1*ContourIntArea * Area Wells Unit[LayIndex].Stress[PeriodIndex]/(WT-WB)
															Else
																If: AREA Wells Unit[LayIndex].Stress Indicator[PeriodIndex] = 2
																	Set Variable: TempValue5:= TempValue1*ContourIntArea/ContourArea*Area Wells Unit[LayIndex].Total Stress[PeriodIndex]/(WT-WB)
																Else
																	Set Variable: TempValue5:= 0
																End if
															End if
															Start a new line
																Export expression: DumLay [I10]
																Export expression: DumRow [I10]
																Export expression: DumCol [I10]
																Export expression: TempValue5; [E13.5]
																# MODPATH
																If: MODPATHChoice
																	Export expression: Area Wells Unit[LayIndex].IFACE[PeriodIndex] [G0]
																End if
																# MOC3D Data
																If: TransportFlag=1 & Transport>0
																	Export expression: Area Wells Unit[LayIndex].Concentration[PeriodIndex] [E13.5]
																End if
															End line
														End file
														Evaluate expression: MODFLOW_Join_Files("TempWellPer" + PeriodIndex, "TempWellPer", "TempWellPer" + PeriodIndex)
													End if
												End loop
											End if
										End loop
									End if
								End loop
							End if
							End if
						End if
						If: @cbUseAreaWells@
						If: !AreaBoundaryInBlock
							If: SteadyWell
								Set Variable: AreaBoundaryInBlock:= Area Wells Unit[LayIndex].Stress Indicator1
							Else
								Loop for: Variable PeriodIndex from: 1 to: MODFLOW_NPER() step: 1
									If: Area Wells Unit[LayIndex].Stress Indicator[PeriodIndex]
										Set Variable: AreaBoundaryInBlock:= 1
									End if
								End loop
							End if
							If: AreaBoundaryInBlock
								Set Variable: WT:= AREA Wells Unit[LayIndex].Top Elevation
								Set Variable: WB:= AREA Wells Unit[LayIndex].Bottom Elevation
								# YBI: Pre calculate elevation top and thickness
								Set Variable: LayerTop:= MODFLOW_L_GetFromOneBased3DList(TopElevationList, DumCol, DumRow, LayIndex)
								Set Variable: LayerBottom:= MODFLOW_L_GetFromOneBased3DList(BottomElevationList, DumCol, DumRow, LayIndex)
								If: (WT>LayerTop)|(WT<=LayerBottom)
									If: ShowWarnings
										Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Top Elevation in an Area well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is outside the limits of the unit, it will be treated as if the top of the well screen were at the top of the unit.")
									End if
									Set Variable: WT:= LayerTop
								End if
								If: (WB>LayerTop)|(WB<LayerBottom)
									If: ShowWarnings
										Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Bottom Elevation in an Area well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is outside the limits of the unit, it will be treated as if the bottom of the well screen were at the bottom of the unit.")
									End if
									Set Variable: WB:= LayerBottom
								End if
								Loop for: Variable DivIndex from: 1 to: MODFLOW_NDIV(LayIndex) step: 1
									Set Variable: DumLay:= M+DivIndex
									Set Variable: TempValue3:= (LayerTop-LayerBottom)/MODFLOW_NDIV(LayIndex)
									Set Variable: TML:= LayerTop-(DivIndex-1)*TempValue3
									Set Variable: BML:= LayerTop-DivIndex*TempValue3
									If: ((WT>TML)&(WB>=TML))|WT<=BML
									Else
										Set Variable: ocflag:= 0
										If: (WT<=TML&WT>BML)&(WB<TML&WB>=BML)
											Set Variable: ocflag:= 1
											Set Variable: TempValue1:= WT-WB
										End if
										If: ocflag=0
											If: (WT<=TML&WT>BML)&(WB<=BML)
												Set Variable: ocflag:= 1
												Set Variable: TempValue1:= WT-BML
											End if
										End if
										If: ocflag=0
											If: (WT>=TML)&(WB<TML&WB>=BML)
												Set Variable: ocflag:= 1
												Set Variable: TempValue1:= TML-WB
											End if
										End if
										If: ocflag=0
											If: (WT>TML)&(WB<BML)
												Set Variable: ocflag:= 1
												Set Variable: TempValue1:= TML-BML
											End if
										End if
										If: ShowWarnings & !((WT-WB) > 0)
											Set Variable: ContinueSimulation:= MODFLOW_ProgressBarAddLine("Vertical extent of Area Well in Unit: " + LayIndex + "; Row: " + DumRow + "; Column: " + DumCol + " is ,= 0, it will be skipped.")
										End if
										If: ((WT-WB) > 0)
											Set Variable: CurrentWellCount:= CurrentWellCount + 1
											Loop for: Variable PeriodIndex from: 1 to: MODFLOW_NPER() step: 1
												If: !(PeriodIndex>1&SteadyWell=0)
													Redirect output to: TempWellPer
														If: AREA Wells Unit[LayIndex].Stress Indicator[PeriodIndex] = 1
															Set Variable: TempValue5:= TempValue1*Area Wells Unit[LayIndex].Stress[PeriodIndex]/(WT-WB)
														Else
															If: AREA Wells Unit[LayIndex].Stress Indicator[PeriodIndex] = 2
																Set Variable: ContourArea:= BlockArea()/GridSize
																Set Variable: TempValue5:= TempValue1*ContourArea*Area Wells Unit[LayIndex].Total Stress[PeriodIndex]/(WT-WB)
															Else
																Set Variable: TempValue5:= 0
															End if
														End if
														Start a new line
															Export expression: DumLay [I10]
															Export expression: DumRow [I10]
															Export expression: DumCol [I10]
															Export expression: TempValue5; [E13.5]
															# MODPATH
															If: MODPATHChoice
																Export expression: Area Wells Unit[LayIndex].IFACE[PeriodIndex] [G0]
															End if
															# MOC3D Data
															If: TransportFlag=1 & Transport>0
																Export expression: Area Wells Unit[LayIndex].Concentration[PeriodIndex] [E13.5]
															End if
														End line
													End file
													Evaluate expression: MODFLOW_Join_Files("TempWellPer" + PeriodIndex, "TempWellPer", "TempWellPer" + PeriodIndex)
												End if
											End loop
										End if
									End if
								End loop
							End if
						End if
						End if
					End if
				End loop
			End if
		End if
	End loop
	If: ContinueSimulation
		If: CurrentWellCount > MaxWells
			Set Variable: MaxWells:= CurrentWellCount
		End if
		Loop for: Variable PeriodIndex from: 1 to: MODFLOW_NPER() step: 1
			Redirect output to: TempWell1
				If: PeriodIndex>1&SteadyWell=0
					Start a new line
						Export expression: -1 [I5]
					End line
				Else
					Start a new line
						Export expression: CurrentWellCount [I5]
					End line
				End if
			End file
			If: !(PeriodIndex>1&SteadyWell=0)
				Evaluate expression: MODFLOW_Join_Files("TempWell1", "TempWellPer" + PeriodIndex, "TempWell1")
				Evaluate expression: MODFLOW_Delete_File("TempWellPer" + PeriodIndex)
			End if
			Evaluate expression: MODFLOW_Join_Files("@adeFileName@.wel", "TempWell1", "@adeFileName@.wel")
		End loop
		Evaluate expression: MODFLOW_Delete_File("TempWellPer")
		Redirect output to: TempWell1
			Start a new line
				Export expression: MaxWells [I5]
				If: IWELCB>0&OneCBCFile=1
				Set Variable: BUDUnit:= MF_GetUnitNumber("BUDUnit")
					Export expression: BUDUnit [I5]
				End if
				If: IWELCB>0&OneCBCFile=0
					Set Variable: BWEUnit:= MF_GetUnitNumber("BWEUnit")
					Export expression: BWEUnit [I5]
				End if
				If: IWELCB=0
					Export expression: 0 [I5]
				End if
				# MODPATH
				If: MODPATHChoice
					Export expression: " AUXILIARY IFACE" [G0]
				End if
				# MOC3D AUX parameter
				If: TransportFlag=1 & Transport>0
					Export expression: " CBCALLOCATE AUXILIARY CONCENTRATION" [G0]
				End if
			End line
		End file
		Evaluate expression: MODFLOW_Join_Files("TempWell1", "@adeFileName@.wel", "@adeFileName@.wel")
		Evaluate expression: MODFLOW_Delete_File("TempWell1")
	End if
	# 
End if
# 

